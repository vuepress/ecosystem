// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`@vuepress/plugin-prismjs > markdown fence preWrapper > :line-numbers / :no-line-numbers > should work properly if \`lineNumbers\` is disabled by default 1`] = `
"<div class="language-text" data-ext="text" data-title="text"><pre v-pre class="language-text"><code><span class="line">Raw text</span>
<span class="line"></span></code></pre>
</div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre v-pre class="language-text"><code><span class="line">Raw text</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text" data-ext="text" data-title="text"><pre v-pre class="language-text"><code><span class="line">Raw text</span>
<span class="line"></span></code></pre>
</div><div class="language-typescript" data-ext="ts" data-title="ts"><pre v-pre class="language-typescript"><code><span class="line">const foo = 'foo'</span>
<span class="line"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
</div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre v-pre class="language-typescript"><code><span class="line">const foo = 'foo'</span>
<span class="line"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript" data-ext="ts" data-title="ts"><pre v-pre class="language-typescript"><code><span class="line">const foo = 'foo'</span>
<span class="line"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
</div><div class="language-typescript" data-ext="ts" data-title="ts"><pre v-pre class="language-typescript"><code><span class="line highlighted">const foo = 'foo'</span>
<span class="line highlighted"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
</div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre v-pre class="language-typescript"><code><span class="line highlighted">const foo = 'foo'</span>
<span class="line highlighted"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript" data-ext="ts" data-title="config/foo.ts"><pre v-pre class="language-typescript"><code><span class="line highlighted">const foo = 'foo'</span>
<span class="line highlighted"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
</div>"
`;

exports[`@vuepress/plugin-prismjs > markdown fence preWrapper > :line-numbers / :no-line-numbers > should work properly if \`lineNumbers\` is enabled by default 1`] = `
"<div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre v-pre class="language-text"><code><span class="line">Raw text</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre v-pre class="language-text"><code><span class="line">Raw text</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text" data-ext="text" data-title="text"><pre v-pre class="language-text"><code><span class="line">Raw text</span>
<span class="line"></span></code></pre>
</div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre v-pre class="language-typescript"><code><span class="line">const foo = 'foo'</span>
<span class="line"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre v-pre class="language-typescript"><code><span class="line">const foo = 'foo'</span>
<span class="line"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript" data-ext="ts" data-title="ts"><pre v-pre class="language-typescript"><code><span class="line">const foo = 'foo'</span>
<span class="line"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
</div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre v-pre class="language-typescript"><code><span class="line highlighted">const foo = 'foo'</span>
<span class="line highlighted"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre v-pre class="language-typescript"><code><span class="line highlighted">const foo = 'foo'</span>
<span class="line highlighted"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript" data-ext="ts" data-title="config/foo.ts"><pre v-pre class="language-typescript"><code><span class="line highlighted">const foo = 'foo'</span>
<span class="line highlighted"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
</div>"
`;

exports[`@vuepress/plugin-prismjs > markdown fence preWrapper > :line-numbers / :no-line-numbers > should work properly if \`lineNumbers\` is set to a number by default 1`] = `
"<div class="language-text" data-ext="text" data-title="text"><pre v-pre class="language-text"><code><span class="line">Raw text</span>
<span class="line"></span></code></pre>
</div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre v-pre class="language-text"><code><span class="line">Raw text</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text" data-ext="text" data-title="text"><pre v-pre class="language-text"><code><span class="line">Raw text</span>
<span class="line"></span></code></pre>
</div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre v-pre class="language-typescript"><code><span class="line">const foo = 'foo'</span>
<span class="line"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre v-pre class="language-typescript"><code><span class="line">const foo = 'foo'</span>
<span class="line"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript" data-ext="ts" data-title="ts"><pre v-pre class="language-typescript"><code><span class="line">const foo = 'foo'</span>
<span class="line"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
</div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre v-pre class="language-typescript"><code><span class="line highlighted">const foo = 'foo'</span>
<span class="line highlighted"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre v-pre class="language-typescript"><code><span class="line highlighted">const foo = 'foo'</span>
<span class="line highlighted"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript" data-ext="ts" data-title="config/foo.ts"><pre v-pre class="language-typescript"><code><span class="line highlighted">const foo = 'foo'</span>
<span class="line highlighted"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
</div>"
`;

exports[`@vuepress/plugin-prismjs > markdown fence preWrapper > :v-pre / :no-v-pre > should work properly if \`vPre.block\` is disabled by default 1`] = `
"<div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">Raw text</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre v-pre class="language-text"><code><span class="line">Raw text</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">Raw text</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line">const foo = 'foo'</span>
<span class="line"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre v-pre class="language-typescript"><code><span class="line">const foo = 'foo'</span>
<span class="line"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line">const foo = 'foo'</span>
<span class="line"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line highlighted">const foo = 'foo'</span>
<span class="line highlighted"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre v-pre class="language-typescript"><code><span class="line highlighted">const foo = 'foo'</span>
<span class="line highlighted"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line highlighted">const foo = 'foo'</span>
<span class="line highlighted"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>"
`;

exports[`@vuepress/plugin-prismjs > markdown fence preWrapper > :v-pre / :no-v-pre > should work properly if \`vPre.block\` is enabled by default 1`] = `
"<div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre v-pre class="language-text"><code><span class="line">Raw text</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre v-pre class="language-text"><code><span class="line">Raw text</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">Raw text</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre v-pre class="language-typescript"><code><span class="line">const foo = 'foo'</span>
<span class="line"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre v-pre class="language-typescript"><code><span class="line">const foo = 'foo'</span>
<span class="line"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line">const foo = 'foo'</span>
<span class="line"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre v-pre class="language-typescript"><code><span class="line highlighted">const foo = 'foo'</span>
<span class="line highlighted"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre v-pre class="language-typescript"><code><span class="line highlighted">const foo = 'foo'</span>
<span class="line highlighted"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line highlighted">const foo = 'foo'</span>
<span class="line highlighted"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>"
`;

exports[`@vuepress/plugin-prismjs > markdown fence preWrapper > plugin options > should disable \`highlightLines\` 1`] = `
"<div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre v-pre class="language-text"><code><span class="line">Raw text</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre v-pre class="language-typescript"><code><span class="line">const foo = 'foo'</span>
<span class="line"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre v-pre class="language-typescript"><code><span class="line">const foo = 'foo'</span>
<span class="line"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="config/foo.ts"><pre v-pre class="language-typescript"><code><span class="line">const foo = 'foo'</span>
<span class="line"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span>
<span class="line">const baz = () =&gt; {</span>
<span class="line">  return 2048</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code v-pre>{{ inlineCode }}</code></p>
"
`;

exports[`@vuepress/plugin-prismjs > markdown fence preWrapper > plugin options > should disable \`lineNumbers\` 1`] = `
"<div class="language-text" data-ext="text" data-title="text"><pre v-pre class="language-text"><code><span class="line">Raw text</span>
<span class="line"></span></code></pre>
</div><div class="language-typescript" data-ext="ts" data-title="ts"><pre v-pre class="language-typescript"><code><span class="line">const foo = 'foo'</span>
<span class="line"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
</div><div class="language-typescript" data-ext="ts" data-title="ts"><pre v-pre class="language-typescript"><code><span class="line highlighted">const foo = 'foo'</span>
<span class="line highlighted"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
</div><div class="language-typescript" data-ext="ts" data-title="config/foo.ts"><pre v-pre class="language-typescript"><code><span class="line highlighted">const foo = 'foo'</span>
<span class="line highlighted"></span>
<span class="line highlighted">function bar () {</span>
<span class="line highlighted">  return 1024</span>
<span class="line highlighted">}</span>
<span class="line"></span>
<span class="line">const baz = () =&gt; {</span>
<span class="line">  return 2048</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
</div><p><code v-pre>{{ inlineCode }}</code></p>
"
`;

exports[`@vuepress/plugin-prismjs > markdown fence preWrapper > plugin options > should disable \`preWrapper\` 1`] = `
"<pre v-pre class="language-text"><code><span class="line">Raw text</span>
<span class="line"></span></code></pre>
<pre v-pre class="language-typescript"><code><span class="line">const foo = 'foo'</span>
<span class="line"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<pre v-pre class="language-typescript"><code><span class="line highlighted">const foo = 'foo'</span>
<span class="line highlighted"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<pre v-pre class="language-typescript"><code><span class="line highlighted">const foo = 'foo'</span>
<span class="line highlighted"></span>
<span class="line highlighted">function bar () {</span>
<span class="line highlighted">  return 1024</span>
<span class="line highlighted">}</span>
<span class="line"></span>
<span class="line">const baz = () =&gt; {</span>
<span class="line">  return 2048</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<p><code v-pre>{{ inlineCode }}</code></p>
"
`;

exports[`@vuepress/plugin-prismjs > markdown fence preWrapper > plugin options > should disable \`vPre.block\` 1`] = `
"<div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">Raw text</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line">const foo = 'foo'</span>
<span class="line"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line highlighted">const foo = 'foo'</span>
<span class="line highlighted"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="config/foo.ts"><pre class="language-typescript"><code><span class="line highlighted">const foo = 'foo'</span>
<span class="line highlighted"></span>
<span class="line highlighted">function bar () {</span>
<span class="line highlighted">  return 1024</span>
<span class="line highlighted">}</span>
<span class="line"></span>
<span class="line">const baz = () =&gt; {</span>
<span class="line">  return 2048</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code v-pre>{{ inlineCode }}</code></p>
"
`;

exports[`@vuepress/plugin-prismjs > markdown fence preWrapper > plugin options > should disable \`vPre.inline\` 1`] = `
"<div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre v-pre class="language-text"><code><span class="line">Raw text</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre v-pre class="language-typescript"><code><span class="line">const foo = 'foo'</span>
<span class="line"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre v-pre class="language-typescript"><code><span class="line highlighted">const foo = 'foo'</span>
<span class="line highlighted"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="config/foo.ts"><pre v-pre class="language-typescript"><code><span class="line highlighted">const foo = 'foo'</span>
<span class="line highlighted"></span>
<span class="line highlighted">function bar () {</span>
<span class="line highlighted">  return 1024</span>
<span class="line highlighted">}</span>
<span class="line"></span>
<span class="line">const baz = () =&gt; {</span>
<span class="line">  return 2048</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>{{ inlineCode }}</code></p>
"
`;

exports[`@vuepress/plugin-prismjs > markdown fence preWrapper > plugin options > should disable \`vPre.inline\` and \`vPre.block\` 1`] = `
"<div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">Raw text</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line">const foo = 'foo'</span>
<span class="line"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line highlighted">const foo = 'foo'</span>
<span class="line highlighted"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="config/foo.ts"><pre class="language-typescript"><code><span class="line highlighted">const foo = 'foo'</span>
<span class="line highlighted"></span>
<span class="line highlighted">function bar () {</span>
<span class="line highlighted">  return 1024</span>
<span class="line highlighted">}</span>
<span class="line"></span>
<span class="line">const baz = () =&gt; {</span>
<span class="line">  return 2048</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>{{ inlineCode }}</code></p>
"
`;

exports[`@vuepress/plugin-prismjs > markdown fence preWrapper > plugin options > should enable \`lineNumbers\` according to number of code lines 1`] = `
"<div class="language-text" data-ext="text" data-title="text"><pre v-pre class="language-text"><code><span class="line">Raw text</span>
<span class="line"></span></code></pre>
</div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre v-pre class="language-typescript"><code><span class="line">const foo = 'foo'</span>
<span class="line"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre v-pre class="language-typescript"><code><span class="line highlighted">const foo = 'foo'</span>
<span class="line highlighted"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="config/foo.ts"><pre v-pre class="language-typescript"><code><span class="line highlighted">const foo = 'foo'</span>
<span class="line highlighted"></span>
<span class="line highlighted">function bar () {</span>
<span class="line highlighted">  return 1024</span>
<span class="line highlighted">}</span>
<span class="line"></span>
<span class="line">const baz = () =&gt; {</span>
<span class="line">  return 2048</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code v-pre>{{ inlineCode }}</code></p>
"
`;

exports[`@vuepress/plugin-prismjs > markdown fence preWrapper > plugin options > should process code fences with default options 1`] = `
"<div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre v-pre class="language-text"><code><span class="line">Raw text</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre v-pre class="language-typescript"><code><span class="line">const foo = 'foo'</span>
<span class="line"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre v-pre class="language-typescript"><code><span class="line highlighted">const foo = 'foo'</span>
<span class="line highlighted"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="config/foo.ts"><pre v-pre class="language-typescript"><code><span class="line highlighted">const foo = 'foo'</span>
<span class="line highlighted"></span>
<span class="line highlighted">function bar () {</span>
<span class="line highlighted">  return 1024</span>
<span class="line highlighted">}</span>
<span class="line"></span>
<span class="line">const baz = () =&gt; {</span>
<span class="line">  return 2048</span>
<span class="line">}</span>
<span class="line"></span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code v-pre>{{ inlineCode }}</code></p>
"
`;

exports[`@vuepress/plugin-prismjs > markdown fence preWrapper > syntax highlighting > should work if highlighted code is not wrapped with \`<pre>\` 1`] = `
"<div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre v-pre class="language-text"><code><span class="line">highlighted code: Raw text</span>
<span class="line">, lang: </span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre v-pre class="language-javascript"><code><span class="line">highlighted code: const foo = 'foo'</span>
<span class="line"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line">, lang: js</span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre v-pre class="language-typescript"><code><span class="line">highlighted code: const foo: string = 'foo'</span>
<span class="line"></span>
<span class="line">function bar (): number {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line">, lang: ts</span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-vue-html line-numbers-mode" data-ext="vue-html" data-title="vue-html"><pre v-pre class="language-vue-html"><code><span class="line">highlighted code: <template></span>
<span class="line">  <div>msg: {{msg}}</div></span>
<span class="line"></template></span>
<span class="line"><script setup lang="ts"></span>
<span class="line">const msg = 'hello world';</span>
<span class="line"></script></span>
<span class="line">, lang: vue-html</span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>"
`;

exports[`@vuepress/plugin-prismjs > markdown fence preWrapper > syntax highlighting > should work if highlighted code is wrapped with \`<pre>\` 1`] = `
"<div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre v-pre class="language-text"><code><span class="line">highlighted code: Raw text</span>
<span class="line">, lang: </span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre v-pre class="language-javascript"><code><span class="line">highlighted code: const foo = 'foo'</span>
<span class="line"></span>
<span class="line">function bar () {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line">, lang: js</span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre v-pre class="language-typescript"><code><span class="line">highlighted code: const foo: string = 'foo'</span>
<span class="line"></span>
<span class="line">function bar (): number {</span>
<span class="line">  return 1024</span>
<span class="line">}</span>
<span class="line">, lang: ts</span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-vue-html line-numbers-mode" data-ext="vue-html" data-title="vue-html"><pre v-pre class="language-vue-html"><code><span class="line">highlighted code: <template></span>
<span class="line">  <div>msg: {{msg}}</div></span>
<span class="line"></template></span>
<span class="line"><script setup lang="ts"></span>
<span class="line">const msg = 'hello world';</span>
<span class="line"></script></span>
<span class="line">, lang: vue-html</span></code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>"
`;
