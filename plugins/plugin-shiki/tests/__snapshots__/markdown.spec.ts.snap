// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`@vuepress/markdown > plugins > codePlugin > :line-numbers / :no-line-numbers > should work properly if \`lineNumbers\` is disabled by default 1`] = `
"<div class="language-" data-ext="" data-title=""><pre><code>Raw text
</code></pre>
</div><div class="language- line-numbers-mode" data-ext="" data-title=""><pre><code class="language-:line-numbers">Raw text
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-" data-ext="" data-title=""><pre><code class="language-:no-line-numbers">Raw text
</code></pre>
</div><div class="language-ts" data-ext="ts" data-title="ts"><pre><code class="language-ts">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
</div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><pre><code class="language-ts:line-numbers">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-ts" data-ext="ts" data-title="ts"><pre><code class="language-ts:no-line-numbers">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
</div><div class="language-ts" data-ext="ts" data-title="ts"><pre><code class="language-ts">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
</div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><pre><code class="language-ts:line-numbers">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-ts" data-ext="ts" data-title="config/foo.ts"><pre><code class="language-ts">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
</div>"
`;

exports[`@vuepress/markdown > plugins > codePlugin > :line-numbers / :no-line-numbers > should work properly if \`lineNumbers\` is enabled by default 1`] = `
"<div class="language- line-numbers-mode" data-ext="" data-title=""><pre><code>Raw text
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-ext="" data-title=""><pre><code class="language-:line-numbers">Raw text
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-" data-ext="" data-title=""><pre><code class="language-:no-line-numbers">Raw text
</code></pre>
</div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><pre><code class="language-ts">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><pre><code class="language-ts:line-numbers">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-ts" data-ext="ts" data-title="ts"><pre><code class="language-ts:no-line-numbers">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
</div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><pre><code class="language-ts">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><pre><code class="language-ts:line-numbers">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-ts" data-ext="ts" data-title="config/foo.ts"><pre><code class="language-ts">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
</div>"
`;

exports[`@vuepress/markdown > plugins > codePlugin > :line-numbers / :no-line-numbers > should work properly if \`lineNumbers\` is set to a number by default 1`] = `
"<div class="language-" data-ext="" data-title=""><pre><code>Raw text
</code></pre>
</div><div class="language- line-numbers-mode" data-ext="" data-title=""><pre><code class="language-:line-numbers">Raw text
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-" data-ext="" data-title=""><pre><code class="language-:no-line-numbers">Raw text
</code></pre>
</div><div class="language-ts" data-ext="ts" data-title="ts"><pre><code class="language-ts">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
</div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><pre><code class="language-ts:line-numbers">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-ts" data-ext="ts" data-title="ts"><pre><code class="language-ts:no-line-numbers">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
</div><div class="language-ts" data-ext="ts" data-title="ts"><pre><code class="language-ts">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
</div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><pre><code class="language-ts:line-numbers">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-ts" data-ext="ts" data-title="config/foo.ts"><pre><code class="language-ts">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
</div>"
`;

exports[`@vuepress/markdown > plugins > codePlugin > :v-pre / :no-v-pre > should work properly if \`vPre.block\` is disabled by default 1`] = `
"<div class="language- line-numbers-mode" data-ext="" data-title=""><pre><code>Raw text
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-ext="" data-title=""><pre><code class="language-:v-pre">Raw text
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-ext="" data-title=""><pre><code class="language-:no-v-pre">Raw text
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><pre><code class="language-ts">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><pre><code class="language-ts:v-pre">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><pre><code class="language-ts:no-v-pre">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><pre><code class="language-ts">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><pre><code class="language-ts:v-pre">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><pre><code class="language-ts:no-v-pre">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>"
`;

exports[`@vuepress/markdown > plugins > codePlugin > :v-pre / :no-v-pre > should work properly if \`vPre.block\` is enabled by default 1`] = `
"<div class="language- line-numbers-mode" data-ext="" data-title=""><pre><code>Raw text
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-ext="" data-title=""><pre><code class="language-:v-pre">Raw text
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-ext="" data-title=""><pre><code class="language-:no-v-pre">Raw text
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><pre><code class="language-ts">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><pre><code class="language-ts:v-pre">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><pre><code class="language-ts:no-v-pre">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><pre><code class="language-ts">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><pre><code class="language-ts:v-pre">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><pre><code class="language-ts:no-v-pre">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>"
`;

exports[`@vuepress/markdown > plugins > codePlugin > plugin options > should disable \`highlightLines\` 1`] = `
"<div class="language- line-numbers-mode" data-ext="" data-title=""><pre><code>Raw text
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><pre><code class="language-ts">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><pre><code class="language-ts">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="config/foo.ts"><pre><code class="language-ts">const foo = 'foo'

function bar () {
  return 1024
}

const baz = () =&gt; {
  return 2048
}
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code v-pre>{{ inlineCode }}</code></p>
"
`;

exports[`@vuepress/markdown > plugins > codePlugin > plugin options > should disable \`lineNumbers\` 1`] = `
"<div class="language-" data-ext="" data-title=""><pre><code>Raw text
</code></pre>
</div><div class="language-ts" data-ext="ts" data-title="ts"><pre><code class="language-ts">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
</div><div class="language-ts" data-ext="ts" data-title="ts"><pre><code class="language-ts">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
</div><div class="language-ts" data-ext="ts" data-title="config/foo.ts"><pre><code class="language-ts">const foo = 'foo'

function bar () {
  return 1024
}

const baz = () =&gt; {
  return 2048
}
</code></pre>
</div><p><code v-pre>{{ inlineCode }}</code></p>
"
`;

exports[`@vuepress/markdown > plugins > codePlugin > plugin options > should disable \`preWrapper\` 1`] = `
"<pre v-pre class="language-"><code>Raw text
</code></pre>
<pre v-pre class="language-ts"><code>const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
<pre v-pre class="language-ts"><code>const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
<pre v-pre class="language-ts"><code>const foo = 'foo'

function bar () {
  return 1024
}

const baz = () =&gt; {
  return 2048
}
</code></pre>
<p><code v-pre>{{ inlineCode }}</code></p>
"
`;

exports[`@vuepress/markdown > plugins > codePlugin > plugin options > should disable \`vPre.block\` 1`] = `
"<div class="language- line-numbers-mode" data-ext="" data-title=""><pre><code>Raw text
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><pre><code class="language-ts">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><pre><code class="language-ts">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="config/foo.ts"><pre><code class="language-ts">const foo = 'foo'

function bar () {
  return 1024
}

const baz = () =&gt; {
  return 2048
}
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code v-pre>{{ inlineCode }}</code></p>
"
`;

exports[`@vuepress/markdown > plugins > codePlugin > plugin options > should disable \`vPre.inline\` 1`] = `
"<div class="language- line-numbers-mode" data-ext="" data-title=""><pre><code>Raw text
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><pre><code class="language-ts">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><pre><code class="language-ts">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="config/foo.ts"><pre><code class="language-ts">const foo = 'foo'

function bar () {
  return 1024
}

const baz = () =&gt; {
  return 2048
}
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>{{ inlineCode }}</code></p>
"
`;

exports[`@vuepress/markdown > plugins > codePlugin > plugin options > should disable \`vPre.inline\` and \`vPre.block\` 1`] = `
"<div class="language- line-numbers-mode" data-ext="" data-title=""><pre><code>Raw text
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><pre><code class="language-ts">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><pre><code class="language-ts">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="config/foo.ts"><pre><code class="language-ts">const foo = 'foo'

function bar () {
  return 1024
}

const baz = () =&gt; {
  return 2048
}
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>{{ inlineCode }}</code></p>
"
`;

exports[`@vuepress/markdown > plugins > codePlugin > plugin options > should enable \`lineNumbers\` according to number of code lines 1`] = `
"<div class="language-" data-ext="" data-title=""><pre><code>Raw text
</code></pre>
</div><div class="language-ts" data-ext="ts" data-title="ts"><pre><code class="language-ts">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
</div><div class="language-ts" data-ext="ts" data-title="ts"><pre><code class="language-ts">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
</div><div class="language-ts" data-ext="ts" data-title="config/foo.ts"><pre><code class="language-ts">const foo = 'foo'

function bar () {
  return 1024
}

const baz = () =&gt; {
  return 2048
}
</code></pre>
</div><p><code v-pre>{{ inlineCode }}</code></p>
"
`;

exports[`@vuepress/markdown > plugins > codePlugin > plugin options > should process code fences with default options 1`] = `
"<div class="language- line-numbers-mode" data-ext="" data-title=""><pre><code>Raw text
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><pre><code class="language-ts">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><pre><code class="language-ts">const foo = 'foo'

function bar () {
  return 1024
}
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="config/foo.ts"><pre><code class="language-ts">const foo = 'foo'

function bar () {
  return 1024
}

const baz = () =&gt; {
  return 2048
}
</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code v-pre>{{ inlineCode }}</code></p>
"
`;

exports[`@vuepress/markdown > plugins > codePlugin > syntax highlighting > should work if highlighted code is not wrapped with \`<pre>\` 1`] = `
"<div class="language- line-numbers-mode" data-ext="" data-title=""><pre><code>highlighted code: Raw text
, lang: </code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-js line-numbers-mode" data-ext="js" data-title="js"><pre><code class="language-js">highlighted code: const foo = 'foo'

function bar () {
  return 1024
}
, lang: js</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><pre><code class="language-ts">highlighted code: const foo: string = 'foo'

function bar (): number {
  return 1024
}
, lang: ts</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-vue-html line-numbers-mode" data-ext="vue-html" data-title="vue-html"><pre><code class="language-vue-html">highlighted code: <template>
  <div>msg: {{msg}}</div>
</template>
<script setup lang="ts">
const msg = 'hello world';
</script>
, lang: vue-html</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>"
`;

exports[`@vuepress/markdown > plugins > codePlugin > syntax highlighting > should work if highlighted code is wrapped with \`<pre>\` 1`] = `
"<div class="language- line-numbers-mode" data-ext="" data-title=""><pre><code>highlighted code: Raw text
, lang: </code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-js line-numbers-mode" data-ext="js" data-title="js"><pre><code>highlighted code: const foo = 'foo'

function bar () {
  return 1024
}
, lang: js</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><pre><code>highlighted code: const foo: string = 'foo'

function bar (): number {
  return 1024
}
, lang: ts</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-vue-html line-numbers-mode" data-ext="vue-html" data-title="vue-html"><pre><code>highlighted code: <template>
  <div>msg: {{msg}}</div>
</template>
<script setup lang="ts">
const msg = 'hello world';
</script>
, lang: vue-html</code></pre>
<div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>"
`;
