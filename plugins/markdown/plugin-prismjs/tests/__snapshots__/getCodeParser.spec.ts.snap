// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`@vuepress/plugin-prismjs > parser > normal parse 1`] = `
"<pre><code><span class="line">const a = 1</span>
<span class="line">const b = 2</span>
<span class="line">const c = 3</span>
<span class="line"></code></pre></span>"
`;

exports[`@vuepress/plugin-prismjs > parser > normal parse line node add class 1`] = `
"<pre><code><span class="line highlighted">  const a = 1</span>
<span class="line highlighted">  const b = 2</span>
<span class="line highlighted">  console.log(a + b)</code></pre></span>"
`;

exports[`@vuepress/plugin-prismjs > parser > parse highlight lines 1`] = `
"<pre><code><span class="line highlighted">const a = 1</span>
<span class="line">const b = 2</span>
<span class="line highlighted">const c = 3</span>
<span class="line">console.log(a + b)</span>
<span class="line"></span>
<span class="line highlighted">function add(a, b) {</span>
<span class="line highlighted">  return a + b</span>
<span class="line highlighted">}</span>
<span class="line"></code></pre></span>"
`;

exports[`@vuepress/plugin-prismjs > parser > parse multiple words highlight within meta 1`] = `
"<pre><code><span class="line">const message = 'Hello <span class="highlighted-word">Foo</span>'</span>
<span class="line">console.log(message) // prints Hello <span class="highlighted-word">Bar</span></code></pre></span>"
`;

exports[`@vuepress/plugin-prismjs > parser > parse notation diff ++:number 1`] = `
"<pre class="has-diff"><code><span class="line">const a = 1</span>
<span class="line diff add">const b = 2</span>
<span class="line diff add">const c = 3</span>
<span class="line diff add">console.log(a + b)</span>
<span class="line"></span>
<span class="line">function add(a, b) {</span>
<span class="line">  return a + b</span>
<span class="line">}</span>
<span class="line"></code></pre></span>"
`;

exports[`@vuepress/plugin-prismjs > parser > parse notation diff 1`] = `
"<pre class="has-diff"><code><span class="line">const a = 1</span>
<span class="line diff add">const b = 2</span>
<span class="line">const c = 3</span>
<span class="line diff remove">console.log(a + b)</span>
<span class="line"></span>
<span class="line diff add">function add(a, b) {</span>
<span class="line">  return a + b</span>
<span class="line">}</span>
<span class="line"></code></pre></span>"
`;

exports[`@vuepress/plugin-prismjs > parser > parse notation diff error:number 1`] = `
"<pre class="has-highlighted"><code><span class="line">const a = 1</span>
<span class="line highlighted error">const b = 2</span>
<span class="line highlighted error">const c = 3</span>
<span class="line highlighted error">console.log(a + b)</span>
<span class="line"></span>
<span class="line">function add(a, b) {</span>
<span class="line">  return a + b</span>
<span class="line">}</span>
<span class="line"></code></pre></span>"
`;

exports[`@vuepress/plugin-prismjs > parser > parse notation error level 1`] = `
"<pre class="has-highlighted"><code><span class="line">const a = 1</span>
<span class="line highlighted warning">const b = 2</span>
<span class="line">const c = 3</span>
<span class="line highlighted error">console.log(a + b)</span>
<span class="line"></span>
<span class="line highlighted warning">function add(a, b) {</span>
<span class="line">  return a + b</span>
<span class="line">}</span>
<span class="line"></code></pre></span>"
`;

exports[`@vuepress/plugin-prismjs > parser > parse notation focus 1`] = `
"<pre class="has-focused-lines"><code><span class="line">const a = 1</span>
<span class="line has-focus">const b = 2</span>
<span class="line">const c = 3</span>
<span class="line">console.log(a + b)</span>
<span class="line"></span>
<span class="line has-focus">function add(a, b) {</span>
<span class="line">  return a + b</span>
<span class="line">}</span>
<span class="line"></code></pre></span>"
`;

exports[`@vuepress/plugin-prismjs > parser > parse notation focus:number 1`] = `
"<pre class="has-focused-lines"><code><span class="line">const a = 1</span>
<span class="line has-focus">const b = 2</span>
<span class="line has-focus">const c = 3</span>
<span class="line has-focus">console.log(a + b)</span>
<span class="line"></span>
<span class="line">function add(a, b) {</span>
<span class="line">  return a + b</span>
<span class="line">}</span>
<span class="line"></code></pre></span>"
`;

exports[`@vuepress/plugin-prismjs > parser > parse notation highlight 1`] = `
"<pre class="has-highlighted"><code><span class="line">const a = 1</span>
<span class="line">const b = 2</span>
<span class="line highlighted">const c = 3</span>
<span class="line highlighted">console.log(a + b)</span>
<span class="line"></span>
<span class="line">function add(a, b) {</span>
<span class="line">  return a + b</span>
<span class="line">}</span>
<span class="line"></code></pre></span>"
`;

exports[`@vuepress/plugin-prismjs > parser > parse notation highlight:number 1`] = `
"<pre class="has-highlighted"><code><span class="line">const a = 1</span>
<span class="line highlighted">const b = 2</span>
<span class="line highlighted">const c = 3</span>
<span class="line highlighted">console.log(a + b)</span>
<span class="line"></span>
<span class="line">function add(a, b) {</span>
<span class="line">  return a + b</span>
<span class="line">}</span>
<span class="line"></code></pre></span>"
`;

exports[`@vuepress/plugin-prismjs > parser > parse notation word highlight :number 1`] = `
"<pre><code><span class="line">const message = '<span class="highlighted-word">Hello</span> World'</span>
<span class="line">console.log(message) // prints <span class="highlighted-word">Hello</span> World</span>
<span class="line">console.log(message) // prints Hello World</code></pre></span>"
`;

exports[`@vuepress/plugin-prismjs > parser > parse notation word highlight 1`] = `
"<pre><code><span class="line">const message = '<span class="highlighted-word">Hello</span> World'</span>
<span class="line">console.log(message) // prints <span class="highlighted-word">Hello</span> World</code></pre></span>"
`;

exports[`@vuepress/plugin-prismjs > parser > parse word highlight within meta 1`] = `
"<pre><code><span class="line">const message = '<span class="highlighted-word">Hello</span> World'</span>
<span class="line">console.log(message) // prints <span class="highlighted-word">Hello</span> World</code></pre></span>"
`;

exports[`@vuepress/plugin-prismjs > parser > should not remove // [\\!code xxx] 1`] = `"<pre><code><span class="line">const a = 1 // [!code focus]</code></pre></span>"`;

exports[`@vuepress/plugin-prismjs > parser > should remove single line // [!code xxx] 1`] = `
"<pre class="has-focused-lines"><code><span class="line">const a = 1</span>
<span class="line has-focus">const b = 2</code></pre></span>"
`;

exports[`@vuepress/plugin-prismjs > parser > should work \`metaWhitespace\` with \`all\` / \`true\` options > \`all\` and  \`:whitespace\` 1`] = `
"<pre><code><span class="line">function<span class="space"> </span>foo(bar:<span class="space"> </span>string,<span class="space"> </span>baz:<span class="space"> </span>string)<span class="space"> </span>{</span>
<span class="line"><span class="space"> </span><span class="space"> </span>console.log('hello<span class="space"> </span>world')<span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span>console.log('hello<span class="space"> </span>world')</span>
<span class="line"><span class="tab">	</span><span class="tab">	</span>console.log('hello<span class="space"> </span>world')</span>
<span class="line">console.log('hello<span class="space"> </span>world)<span class="tab">	</span></span>
<span class="line">}</code></pre></span>"
`;

exports[`@vuepress/plugin-prismjs > parser > should work \`metaWhitespace\` with \`all\` / \`true\` options > \`true\` and  \`:whitespace=boundary\` 1`] = `
"<pre><code><span class="line">function foo(bar: string, baz: string) {</span>
<span class="line"><span class="space"> </span><span class="space"> </span>console.log('hello world')<span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span>console.log('hello world')</span>
<span class="line"><span class="tab">	</span><span class="tab">	</span>console.log('hello world')</span>
<span class="line">console.log('hello world)<span class="tab">	</span></span>
<span class="line">}</code></pre></span>"
`;

exports[`@vuepress/plugin-prismjs > parser > should work \`metaWhitespace\` with \`all\` / \`true\` options > \`true\` and  \`:whitespace\` 1`] = `
"<pre><code><span class="line">function<span class="space"> </span>foo(bar:<span class="space"> </span>string,<span class="space"> </span>baz:<span class="space"> </span>string)<span class="space"> </span>{</span>
<span class="line"><span class="space"> </span><span class="space"> </span>console.log('hello<span class="space"> </span>world')<span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span>console.log('hello<span class="space"> </span>world')</span>
<span class="line"><span class="tab">	</span><span class="tab">	</span>console.log('hello<span class="space"> </span>world')</span>
<span class="line">console.log('hello<span class="space"> </span>world)<span class="tab">	</span></span>
<span class="line">}</code></pre></span>"
`;

exports[`@vuepress/plugin-prismjs > parser > should work \`metaWhitespace\` with \`all\` / \`true\` options > \`true\` and \`:whitespace=trailing\` 1`] = `
"<pre><code><span class="line">function foo(bar: string, baz: string) {</span>
<span class="line">  console.log('hello world')<span class="space"> </span><span class="space"> </span></span>
<span class="line">  console.log('hello world')</span>
<span class="line">		console.log('hello world')</span>
<span class="line">console.log('hello world)<span class="tab">	</span></span>
<span class="line">}</code></pre></span>"
`;

exports[`@vuepress/plugin-prismjs > parser > should work \`metaWhitespace\` with \`boundary\` options > \`boundary\` and \`:whitespace=all 1`] = `
"<pre><code><span class="line"><span class="line">function<span class="space"> </span>foo(bar:<span class="space"> </span>string,<span class="space"> </span>baz:<span class="space"> </span>string)<span class="space"> </span>{</span></span>
<span class="line"><span class="line"><span class="space"> </span><span class="space"> </span>console</span><span>.</span>log('hello<span class="space"> </span>world'<span>)<span class="space"> </span><span class="space"> </span></span></span></span>
<span class="line"><span class="space"> </span><span class="space"> </span>console.log('hello<span class="space"> </span>world')</span>
<span class="line"><span class="tab">	</span><span class="tab">	</span>console.log('hello<span class="space"> </span>world')</span>
<span class="line">console.log('hello<span class="space"> </span>world)<span class="tab">	</span></span>
<span class="line">}</code></pre></span>"
`;

exports[`@vuepress/plugin-prismjs > parser > should work \`metaWhitespace\` with \`boundary\` options > \`boundary\` and \`:whitespace=trailing\` 1`] = `
"<pre><code><span class="line"><span class="line">function foo(bar: string, baz: string) {</span></span>
<span class="line"><span class="line">  console</span><span>.</span>log('hello world'<span>)<span class="space"> </span><span class="space"> </span></span></span></span>
<span class="line">  console.log('hello world')</span>
<span class="line">		console.log('hello world')</span>
<span class="line">console.log('hello world)<span class="tab">	</span></span>
<span class="line">}</code></pre></span>"
`;

exports[`@vuepress/plugin-prismjs > parser > should work \`metaWhitespace\` with \`boundary\` options > \`boundary\` and \`:whitespace\` 1`] = `
"<pre><code><span class="line"><span class="line">function foo(bar: string, baz: string) {</span></span>
<span class="line"><span class="line"><span class="space"> </span><span class="space"> </span>console</span><span>.</span>log('hello world'<span>)<span class="space"> </span><span class="space"> </span></span></span></span>
<span class="line"><span class="space"> </span><span class="space"> </span>console.log('hello world')</span>
<span class="line"><span class="tab">	</span><span class="tab">	</span>console.log('hello world')</span>
<span class="line">console.log('hello world)<span class="tab">	</span></span>
<span class="line">}</code></pre></span>"
`;

exports[`@vuepress/plugin-prismjs > parser > should work \`metaWhitespace\` with \`false\` > disabled global 1`] = `
"<pre><code><span class="line">function foo(bar: string, baz: string) {</span>
<span class="line">  console.log('hello world')  </span>
<span class="line">  console.log('hello world')</span>
<span class="line">		console.log('hello world')</span>
<span class="line">console.log('hello world)	</span>
<span class="line">}</code></pre></span>"
`;

exports[`@vuepress/plugin-prismjs > parser > should work \`metaWhitespace\` with \`false\` > disabled global and :whitespace 1`] = `
"<pre><code><span class="line">function<span class="space"> </span>foo(bar:<span class="space"> </span>string,<span class="space"> </span>baz:<span class="space"> </span>string)<span class="space"> </span>{</span>
<span class="line"><span class="space"> </span><span class="space"> </span>console.log('hello<span class="space"> </span>world')<span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span>console.log('hello<span class="space"> </span>world')</span>
<span class="line"><span class="tab">	</span><span class="tab">	</span>console.log('hello<span class="space"> </span>world')</span>
<span class="line">console.log('hello<span class="space"> </span>world)<span class="tab">	</span></span>
<span class="line">}</code></pre></span>"
`;

exports[`@vuepress/plugin-prismjs > parser > should work \`metaWhitespace\` with default options > :whitespace / :whitespace=all 1`] = `
"<pre><code><span class="line">function<span class="space"> </span>foo(bar:<span class="space"> </span>string,<span class="space"> </span>baz:<span class="space"> </span>string)<span class="space"> </span>{</span>
<span class="line"><span class="space"> </span><span class="space"> </span>console.log('hello<span class="space"> </span>world')<span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span>console.log('hello<span class="space"> </span>world')</span>
<span class="line"><span class="tab">	</span><span class="tab">	</span>console.log('hello<span class="space"> </span>world')</span>
<span class="line">console.log('hello<span class="space"> </span>world)<span class="tab">	</span></span>
<span class="line">}</code></pre></span>"
`;

exports[`@vuepress/plugin-prismjs > parser > should work \`metaWhitespace\` with default options > :whitespace=boundary 1`] = `
"<pre><code><span class="line">function foo(bar: string, baz: string) {</span>
<span class="line"><span class="space"> </span><span class="space"> </span>console.log('hello world')<span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span>console.log('hello world')</span>
<span class="line"><span class="tab">	</span><span class="tab">	</span>console.log('hello world')</span>
<span class="line">console.log('hello world)<span class="tab">	</span></span>
<span class="line">}</code></pre></span>"
`;

exports[`@vuepress/plugin-prismjs > parser > should work \`metaWhitespace\` with default options > :whitespace=trailing 1`] = `
"<pre><code><span class="line">function foo(bar: string, baz: string) {</span>
<span class="line">  console.log('hello world')<span class="space"> </span><span class="space"> </span></span>
<span class="line">  console.log('hello world')</span>
<span class="line">		console.log('hello world')</span>
<span class="line">console.log('hello world)<span class="tab">	</span></span>
<span class="line">}</code></pre></span>"
`;

exports[`@vuepress/plugin-prismjs > parser > should work \`metaWhitespace\` with default options > no render whitespace without meta 1`] = `
"<pre><code><span class="line">function foo(bar: string, baz: string) {</span>
<span class="line">  console.log('hello world')  </span>
<span class="line">  console.log('hello world')</span>
<span class="line">		console.log('hello world')</span>
<span class="line">console.log('hello world)	</span>
<span class="line">}</code></pre></span>"
`;
